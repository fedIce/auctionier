/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    notifications: Notification;
    auctions: Auction;
    'auction-items': AuctionItem;
    categories: Category;
    sub_categories: SubCategory;
    brands: Brand;
    auction_types: AuctionType;
    sellers: Seller;
    bids: Bid;
    bid_item: BidItem;
    'customer-shipping-details': CustomerShippingDetail;
    orders: Order;
    watchers: Watcher;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    auctions: AuctionsSelect<false> | AuctionsSelect<true>;
    'auction-items': AuctionItemsSelect<false> | AuctionItemsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    sub_categories: SubCategoriesSelect<false> | SubCategoriesSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    auction_types: AuctionTypesSelect<false> | AuctionTypesSelect<true>;
    sellers: SellersSelect<false> | SellersSelect<true>;
    bids: BidsSelect<false> | BidsSelect<true>;
    bid_item: BidItemSelect<false> | BidItemSelect<true>;
    'customer-shipping-details': CustomerShippingDetailsSelect<false> | CustomerShippingDetailsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    watchers: WatchersSelect<false> | WatchersSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      'schedule-close-bidding-task': TaskScheduleCloseBiddingTask;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  fullname: string;
  won_bids?: (string | Bid)[] | null;
  phone?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bids".
 */
export interface Bid {
  id: string;
  auction_id: string;
  starting_bid: number;
  current_bid?: number | null;
  auction_starttime: string;
  auction_endtime: string;
  reserve_price?: number | null;
  bids?: (string | BidItem)[] | null;
  top_biddder?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bid_item".
 */
export interface BidItem {
  id: string;
  user?: (string | null) | User;
  bid_id?: (string | null) | Bid;
  amount?: number | null;
  timestamp?: string | null;
  valid_bid?: boolean | null;
  auction_type?: (string | null) | AuctionType;
  open_status?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auction_types".
 */
export interface AuctionType {
  id: string;
  auction_type_id: string;
  slug?: string | null;
  auctionType?: string | null;
  description: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  title?: string | null;
  body?: string | null;
  user?: (string | null) | User;
  read?: boolean | null;
  type?: ('error' | 'info' | 'warning' | 'success') | null;
  extra?:
    | {
        key?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auctions".
 */
export interface Auction {
  id: string;
  title: string;
  slug?: string | null;
  verticalbannerImage?: (string | null) | Media;
  horizontalbannerImage?: (string | null) | Media;
  description: string;
  startDate: string;
  endDate: string;
  startingBid?: number | null;
  tag: string[];
  category: string | Category;
  sub_category: string | SubCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  slug: string;
  icon:
    | 'AcademicCapIcon'
    | 'AdjustmentsHorizontalIcon'
    | 'AdjustmentsVerticalIcon'
    | 'ArchiveBoxArrowDownIcon'
    | 'ArchiveBoxIcon'
    | 'ArchiveBoxXMarkIcon'
    | 'ArrowDownCircleIcon'
    | 'ArrowDownIcon'
    | 'ArrowDownLeftIcon'
    | 'ArrowDownOnSquareIcon'
    | 'ArrowDownOnSquareStackIcon'
    | 'ArrowDownRightIcon'
    | 'ArrowDownTrayIcon'
    | 'ArrowLeftCircleIcon'
    | 'ArrowLeftEndOnRectangleIcon'
    | 'ArrowLeftIcon'
    | 'ArrowLeftOnRectangleIcon'
    | 'ArrowLeftStartOnRectangleIcon'
    | 'ArrowLongDownIcon'
    | 'ArrowLongLeftIcon'
    | 'ArrowLongRightIcon'
    | 'ArrowLongUpIcon'
    | 'ArrowPathIcon'
    | 'ArrowPathRoundedSquareIcon'
    | 'ArrowRightCircleIcon'
    | 'ArrowRightEndOnRectangleIcon'
    | 'ArrowRightIcon'
    | 'ArrowRightOnRectangleIcon'
    | 'ArrowRightStartOnRectangleIcon'
    | 'ArrowSmallDownIcon'
    | 'ArrowSmallLeftIcon'
    | 'ArrowSmallRightIcon'
    | 'ArrowSmallUpIcon'
    | 'ArrowTopRightOnSquareIcon'
    | 'ArrowTrendingDownIcon'
    | 'ArrowTrendingUpIcon'
    | 'ArrowTurnDownLeftIcon'
    | 'ArrowTurnDownRightIcon'
    | 'ArrowTurnLeftDownIcon'
    | 'ArrowTurnLeftUpIcon'
    | 'ArrowTurnRightDownIcon'
    | 'ArrowTurnRightUpIcon'
    | 'ArrowTurnUpLeftIcon'
    | 'ArrowTurnUpRightIcon'
    | 'ArrowUpCircleIcon'
    | 'ArrowUpIcon'
    | 'ArrowUpLeftIcon'
    | 'ArrowUpOnSquareIcon'
    | 'ArrowUpOnSquareStackIcon'
    | 'ArrowUpRightIcon'
    | 'ArrowUpTrayIcon'
    | 'ArrowUturnDownIcon'
    | 'ArrowUturnLeftIcon'
    | 'ArrowUturnRightIcon'
    | 'ArrowUturnUpIcon'
    | 'ArrowsPointingInIcon'
    | 'ArrowsPointingOutIcon'
    | 'ArrowsRightLeftIcon'
    | 'ArrowsUpDownIcon'
    | 'AtSymbolIcon'
    | 'BackspaceIcon'
    | 'BackwardIcon'
    | 'BanknotesIcon'
    | 'Bars2Icon'
    | 'Bars3BottomLeftIcon'
    | 'Bars3BottomRightIcon'
    | 'Bars3CenterLeftIcon'
    | 'Bars3Icon'
    | 'Bars4Icon'
    | 'BarsArrowDownIcon'
    | 'BarsArrowUpIcon'
    | 'Battery0Icon'
    | 'Battery100Icon'
    | 'Battery50Icon'
    | 'BeakerIcon'
    | 'BellAlertIcon'
    | 'BellIcon'
    | 'BellSlashIcon'
    | 'BellSnoozeIcon'
    | 'BoldIcon'
    | 'BoltIcon'
    | 'BoltSlashIcon'
    | 'BookOpenIcon'
    | 'BookmarkIcon'
    | 'BookmarkSlashIcon'
    | 'BookmarkSquareIcon'
    | 'BriefcaseIcon'
    | 'BugAntIcon'
    | 'BuildingLibraryIcon'
    | 'BuildingOffice2Icon'
    | 'BuildingOfficeIcon'
    | 'BuildingStorefrontIcon'
    | 'CakeIcon'
    | 'CalculatorIcon'
    | 'CalendarDateRangeIcon'
    | 'CalendarDaysIcon'
    | 'CalendarIcon'
    | 'CameraIcon'
    | 'ChartBarIcon'
    | 'ChartBarSquareIcon'
    | 'ChartPieIcon'
    | 'ChatBubbleBottomCenterIcon'
    | 'ChatBubbleBottomCenterTextIcon'
    | 'ChatBubbleLeftEllipsisIcon'
    | 'ChatBubbleLeftIcon'
    | 'ChatBubbleLeftRightIcon'
    | 'ChatBubbleOvalLeftEllipsisIcon'
    | 'ChatBubbleOvalLeftIcon'
    | 'CheckBadgeIcon'
    | 'CheckCircleIcon'
    | 'CheckIcon'
    | 'ChevronDoubleDownIcon'
    | 'ChevronDoubleLeftIcon'
    | 'ChevronDoubleRightIcon'
    | 'ChevronDoubleUpIcon'
    | 'ChevronDownIcon'
    | 'ChevronLeftIcon'
    | 'ChevronRightIcon'
    | 'ChevronUpDownIcon'
    | 'ChevronUpIcon'
    | 'CircleStackIcon'
    | 'ClipboardDocumentCheckIcon'
    | 'ClipboardDocumentIcon'
    | 'ClipboardDocumentListIcon'
    | 'ClipboardIcon'
    | 'ClockIcon'
    | 'CloudArrowDownIcon'
    | 'CloudArrowUpIcon'
    | 'CloudIcon'
    | 'CodeBracketIcon'
    | 'CodeBracketSquareIcon'
    | 'Cog6ToothIcon'
    | 'Cog8ToothIcon'
    | 'CogIcon'
    | 'CommandLineIcon'
    | 'ComputerDesktopIcon'
    | 'CpuChipIcon'
    | 'CreditCardIcon'
    | 'CubeIcon'
    | 'CubeTransparentIcon'
    | 'CurrencyBangladeshiIcon'
    | 'CurrencyDollarIcon'
    | 'CurrencyEuroIcon'
    | 'CurrencyPoundIcon'
    | 'CurrencyRupeeIcon'
    | 'CurrencyYenIcon'
    | 'CursorArrowRaysIcon'
    | 'CursorArrowRippleIcon'
    | 'DevicePhoneMobileIcon'
    | 'DeviceTabletIcon'
    | 'DivideIcon'
    | 'DocumentArrowDownIcon'
    | 'DocumentArrowUpIcon'
    | 'DocumentChartBarIcon'
    | 'DocumentCheckIcon'
    | 'DocumentCurrencyBangladeshiIcon'
    | 'DocumentCurrencyDollarIcon'
    | 'DocumentCurrencyEuroIcon'
    | 'DocumentCurrencyPoundIcon'
    | 'DocumentCurrencyRupeeIcon'
    | 'DocumentCurrencyYenIcon'
    | 'DocumentDuplicateIcon'
    | 'DocumentIcon'
    | 'DocumentMagnifyingGlassIcon'
    | 'DocumentMinusIcon'
    | 'DocumentPlusIcon'
    | 'DocumentTextIcon'
    | 'EllipsisHorizontalCircleIcon'
    | 'EllipsisHorizontalIcon'
    | 'EllipsisVerticalIcon'
    | 'EnvelopeIcon'
    | 'EnvelopeOpenIcon'
    | 'EqualsIcon'
    | 'ExclamationCircleIcon'
    | 'ExclamationTriangleIcon'
    | 'EyeDropperIcon'
    | 'EyeIcon'
    | 'EyeSlashIcon'
    | 'FaceFrownIcon'
    | 'FaceSmileIcon'
    | 'FilmIcon'
    | 'FingerPrintIcon'
    | 'FireIcon'
    | 'FlagIcon'
    | 'FolderArrowDownIcon'
    | 'FolderIcon'
    | 'FolderMinusIcon'
    | 'FolderOpenIcon'
    | 'FolderPlusIcon'
    | 'ForwardIcon'
    | 'FunnelIcon'
    | 'GifIcon'
    | 'GiftIcon'
    | 'GiftTopIcon'
    | 'GlobeAltIcon'
    | 'GlobeAmericasIcon'
    | 'GlobeAsiaAustraliaIcon'
    | 'GlobeEuropeAfricaIcon'
    | 'H1Icon'
    | 'H2Icon'
    | 'H3Icon'
    | 'HandRaisedIcon'
    | 'HandThumbDownIcon'
    | 'HandThumbUpIcon'
    | 'HashtagIcon'
    | 'HeartIcon'
    | 'HomeIcon'
    | 'HomeModernIcon'
    | 'IdentificationIcon'
    | 'InboxArrowDownIcon'
    | 'InboxIcon'
    | 'InboxStackIcon'
    | 'InformationCircleIcon'
    | 'ItalicIcon'
    | 'KeyIcon'
    | 'LanguageIcon'
    | 'LifebuoyIcon'
    | 'LightBulbIcon'
    | 'LinkIcon'
    | 'LinkSlashIcon'
    | 'ListBulletIcon'
    | 'LockClosedIcon'
    | 'LockOpenIcon'
    | 'MagnifyingGlassCircleIcon'
    | 'MagnifyingGlassIcon'
    | 'MagnifyingGlassMinusIcon'
    | 'MagnifyingGlassPlusIcon'
    | 'MapIcon'
    | 'MapPinIcon'
    | 'MegaphoneIcon'
    | 'MicrophoneIcon'
    | 'MinusCircleIcon'
    | 'MinusIcon'
    | 'MinusSmallIcon'
    | 'MoonIcon'
    | 'MusicalNoteIcon'
    | 'NewspaperIcon'
    | 'NoSymbolIcon'
    | 'NumberedListIcon'
    | 'PaintBrushIcon'
    | 'PaperAirplaneIcon'
    | 'PaperClipIcon'
    | 'PauseCircleIcon'
    | 'PauseIcon'
    | 'PencilIcon'
    | 'PencilSquareIcon'
    | 'PercentBadgeIcon'
    | 'PhoneArrowDownLeftIcon'
    | 'PhoneArrowUpRightIcon'
    | 'PhoneIcon'
    | 'PhoneXMarkIcon'
    | 'PhotoIcon'
    | 'PlayCircleIcon'
    | 'PlayIcon'
    | 'PlayPauseIcon'
    | 'PlusCircleIcon'
    | 'PlusIcon'
    | 'PlusSmallIcon'
    | 'PowerIcon'
    | 'PresentationChartBarIcon'
    | 'PresentationChartLineIcon'
    | 'PrinterIcon'
    | 'PuzzlePieceIcon'
    | 'QrCodeIcon'
    | 'QuestionMarkCircleIcon'
    | 'QueueListIcon'
    | 'RadioIcon'
    | 'ReceiptPercentIcon'
    | 'ReceiptRefundIcon'
    | 'RectangleGroupIcon'
    | 'RectangleStackIcon'
    | 'RocketLaunchIcon'
    | 'RssIcon'
    | 'ScaleIcon'
    | 'ScissorsIcon'
    | 'ServerIcon'
    | 'ServerStackIcon'
    | 'ShareIcon'
    | 'ShieldCheckIcon'
    | 'ShieldExclamationIcon'
    | 'ShoppingBagIcon'
    | 'ShoppingCartIcon'
    | 'SignalIcon'
    | 'SignalSlashIcon'
    | 'SlashIcon'
    | 'SparklesIcon'
    | 'SpeakerWaveIcon'
    | 'SpeakerXMarkIcon'
    | 'Square2StackIcon'
    | 'Square3Stack3DIcon'
    | 'Squares2X2Icon'
    | 'SquaresPlusIcon'
    | 'StarIcon'
    | 'StopCircleIcon'
    | 'StopIcon'
    | 'StrikethroughIcon'
    | 'SunIcon'
    | 'SwatchIcon'
    | 'TableCellsIcon'
    | 'TagIcon'
    | 'TicketIcon'
    | 'TrashIcon'
    | 'TrophyIcon'
    | 'TruckIcon'
    | 'TvIcon'
    | 'UnderlineIcon'
    | 'UserCircleIcon'
    | 'UserGroupIcon'
    | 'UserIcon'
    | 'UserMinusIcon'
    | 'UserPlusIcon'
    | 'UsersIcon'
    | 'VariableIcon'
    | 'VideoCameraIcon'
    | 'VideoCameraSlashIcon'
    | 'ViewColumnsIcon'
    | 'ViewfinderCircleIcon'
    | 'WalletIcon'
    | 'WifiIcon'
    | 'WindowIcon'
    | 'WrenchIcon'
    | 'WrenchScrewdriverIcon'
    | 'XCircleIcon'
    | 'XMarkIcon';
  category_id: string;
  category_name?: string | null;
  description: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub_categories".
 */
export interface SubCategory {
  id: string;
  slug: string;
  sub_category_id: string;
  title: string;
  description: string;
  category?: (string | null) | Category;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auction-items".
 */
export interface AuctionItem {
  id: string;
  lotId: string;
  bid_id?: (string | null) | Bid;
  auction?: (string | null) | Auction;
  title: string;
  slug?: string | null;
  category: string | Category;
  sub_category: string | SubCategory;
  auction_type: string | AuctionType;
  brand?: (string | null) | Brand;
  condition?: ('new' | 'used' | 'refurbished' | 'damaged' | 'for_parts' | 'unknown') | null;
  condition_rating?:
    | ('mint' | 'like_new' | 'very_good' | 'good' | 'acceptable' | 'poor' | 'damaged' | 'for_parts' | 'unknown')
    | null;
  active?: boolean | null;
  seller: string | Seller;
  condition_details?: string | null;
  description: string;
  item_details: {
    detail_key: string;
    detail_value: string;
    id?: string | null;
  }[];
  authenticity_verified?: boolean | null;
  reserve_price?: number | null;
  buyNow?: boolean | null;
  buy_now_price?: number | null;
  startingBid: number;
  startDate: string;
  endDate: string;
  tag: string[];
  image: (string | Media)[];
  status: 'open' | 'closed' | 'suspended';
  order?: (string | null) | Order;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: string;
  brand_id: string;
  slug?: string | null;
  title?: string | null;
  description: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sellers".
 */
export interface Seller {
  id: string;
  seller_id: string;
  seller_name: string;
  seller_phone_number: string;
  seller_email: string;
  seller_address: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  user?: (string | null) | User;
  auction?: (string | null) | AuctionItem;
  payment_ref?: string | null;
  winning_bid?: (string | null) | BidItem;
  amount?: number | null;
  currency?: string | null;
  status?: ('pending' | 'completed' | 'cancelled' | 'shipped') | null;
  payment_status?: ('paid' | 'unpaid' | 'refunded') | null;
  payment_method?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-shipping-details".
 */
export interface CustomerShippingDetail {
  id: string;
  user?: (string | null) | User;
  address?: string | null;
  city?: string | null;
  region?: string | null;
  postal?: string | null;
  country?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "watchers".
 */
export interface Watcher {
  id: string;
  auction_item?: (string | null) | AuctionItem;
  user?: (string | null) | User;
  time?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedule-close-bidding-task';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedule-close-bidding-task') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null)
    | ({
        relationTo: 'auctions';
        value: string | Auction;
      } | null)
    | ({
        relationTo: 'auction-items';
        value: string | AuctionItem;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'sub_categories';
        value: string | SubCategory;
      } | null)
    | ({
        relationTo: 'brands';
        value: string | Brand;
      } | null)
    | ({
        relationTo: 'auction_types';
        value: string | AuctionType;
      } | null)
    | ({
        relationTo: 'sellers';
        value: string | Seller;
      } | null)
    | ({
        relationTo: 'bids';
        value: string | Bid;
      } | null)
    | ({
        relationTo: 'bid_item';
        value: string | BidItem;
      } | null)
    | ({
        relationTo: 'customer-shipping-details';
        value: string | CustomerShippingDetail;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'watchers';
        value: string | Watcher;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  fullname?: T;
  won_bids?: T;
  phone?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  title?: T;
  body?: T;
  user?: T;
  read?: T;
  type?: T;
  extra?:
    | T
    | {
        key?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auctions_select".
 */
export interface AuctionsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  verticalbannerImage?: T;
  horizontalbannerImage?: T;
  description?: T;
  startDate?: T;
  endDate?: T;
  startingBid?: T;
  tag?: T;
  category?: T;
  sub_category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auction-items_select".
 */
export interface AuctionItemsSelect<T extends boolean = true> {
  lotId?: T;
  bid_id?: T;
  auction?: T;
  title?: T;
  slug?: T;
  category?: T;
  sub_category?: T;
  auction_type?: T;
  brand?: T;
  condition?: T;
  condition_rating?: T;
  active?: T;
  seller?: T;
  condition_details?: T;
  description?: T;
  item_details?:
    | T
    | {
        detail_key?: T;
        detail_value?: T;
        id?: T;
      };
  authenticity_verified?: T;
  reserve_price?: T;
  buyNow?: T;
  buy_now_price?: T;
  startingBid?: T;
  startDate?: T;
  endDate?: T;
  tag?: T;
  image?: T;
  status?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  slug?: T;
  icon?: T;
  category_id?: T;
  category_name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sub_categories_select".
 */
export interface SubCategoriesSelect<T extends boolean = true> {
  slug?: T;
  sub_category_id?: T;
  title?: T;
  description?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  brand_id?: T;
  slug?: T;
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auction_types_select".
 */
export interface AuctionTypesSelect<T extends boolean = true> {
  auction_type_id?: T;
  slug?: T;
  auctionType?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sellers_select".
 */
export interface SellersSelect<T extends boolean = true> {
  seller_id?: T;
  seller_name?: T;
  seller_phone_number?: T;
  seller_email?: T;
  seller_address?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bids_select".
 */
export interface BidsSelect<T extends boolean = true> {
  auction_id?: T;
  starting_bid?: T;
  current_bid?: T;
  auction_starttime?: T;
  auction_endtime?: T;
  reserve_price?: T;
  bids?: T;
  top_biddder?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bid_item_select".
 */
export interface BidItemSelect<T extends boolean = true> {
  user?: T;
  bid_id?: T;
  amount?: T;
  timestamp?: T;
  valid_bid?: T;
  auction_type?: T;
  open_status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer-shipping-details_select".
 */
export interface CustomerShippingDetailsSelect<T extends boolean = true> {
  user?: T;
  address?: T;
  city?: T;
  region?: T;
  postal?: T;
  country?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  user?: T;
  auction?: T;
  payment_ref?: T;
  winning_bid?: T;
  amount?: T;
  currency?: T;
  status?: T;
  payment_status?: T;
  payment_method?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "watchers_select".
 */
export interface WatchersSelect<T extends boolean = true> {
  auction_item?: T;
  user?: T;
  time?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedule-close-bidding-task".
 */
export interface TaskScheduleCloseBiddingTask {
  input: {
    id: string;
  };
  output: {
    status: boolean;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}